#   ▄▄▄▄  ▄    ▄ ▄    ▄ ▄    ▄ ▄▄▄▄   ▄▄▄▄▄    ▄▄▄ 
#  █▀   ▀  █  █  █    █ █  ▄▀  █   ▀▄ █   ▀█ ▄▀   ▀
#  ▀█▄▄▄    ██   █▄▄▄▄█ █▄█    █    █ █▄▄▄▄▀ █     
#      ▀█  ▄▀▀▄  █    █ █  █▄  █    █ █   ▀▄ █     
#  ▀▄▄▄█▀ ▄▀  ▀▄ █    █ █   ▀▄ █▄▄▄▀  █    ▀  ▀▄▄▄▀

#
# wm independent hotkeys
#

# terminal emulator
super + Return
	alacritty
super + p
	kitty
super + shift + p
	st

# program launcher
super + @space
	dmenu_run

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd


#
# bspwm hotkeys
#

# quit bspwm
super + alt + q 
	[ "$(printf "No\nYes" | dmenu -i -p "Quit BSPWM? ")" = "Yes" ] && bspc q

# restart bspwm
super + alt + r
	[ "$(printf "No\nYes" | dmenu -i -p "Restart BSPWM? ")" = "Yes" ] && bspc wm -r

# close and kill
super + {alt +,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# launch ncmpcpp in tdrop scratchpad
super + u
	tdrop -w 60% -h 70% -y 20% -x 20% -a alacritty -e ncmpcpp

# launch podcast client
super + alt + g
	tdrop -w 65% -h 55% -y 20% -x 20% -a alacritty -e castero

# launch ani-cli
super + ctrl + a
	tdrop -w 60% -h 50% -y 20% -x 20% -a alacritty -e ani-cli

# launch web browser
super + alt + b
	brave
super + shift + b
	qutebrowser

# passmenu
super + alt + p
	passmenu

# file manager
super + alt + f
	pcmanfm

# lockscreen
super + ctrl + alt + l
	betterlockscreen -l blur

# open file
super + alt + o
	dmopen

# ytfzf keybindings
# search for youtube and play
super + alt + y
	ytfzf -D

# ytfzf audio-only 
super + alt + a
	ytfzf -mD

# change wallpapers
super + alt + c
	feh --bg-scale --random --recursive $HOME/.local/share/wallpapers/nord/*

# screenshot
Print
	flameshot gui

# launch emacs
super + shift + Return
	emacsclient -c -a 'emacs'

# backlight control
XF86MonBrightnessUp
    brightnessctl set +5%
XF86MonBrightnessDown
    brightnessctl set 5%-

# audio volume control
XF86AudioRaiseVolume
	amixer -q sset PCM,0 1+ unmute
XF86AudioLowerVolume
	amixer -q sset PCM,0 1- unmute
XF86AudioMute
	amixer -q sset PCM,0 toggle
